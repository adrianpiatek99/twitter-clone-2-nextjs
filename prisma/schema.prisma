// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                  String  @id @default(auto()) @map("_id") @db.ObjectId
  user_id             String  @db.ObjectId
  type                String
  provider            String
  provider_account_id String
  refresh_token       String?
  access_token        String?
  expires_at          Int?
  token_type          String?
  scope               String?
  id_token            String?
  session_state       String?
  oauth_token_secret  String?
  oauth_token         String?

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([provider, provider_account_id])
}

model Session {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  session_token String   @unique
  user_id       String   @db.ObjectId
  expires       DateTime
  user          User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

enum Role {
  ADMIN
  MODERATOR
  USER
}

model User {
  id                 String    @id @default(auto()) @map("_id") @db.ObjectId
  name               String
  screen_name        String    @unique
  email              String    @unique
  password           String
  profile_image_url  String    @default("")
  profile_banner_url String    @default("")
  description        String    @default("")
  url                String?
  location           String    @default("")
  followers          String[]
  following          String[]
  follower_count     Int       @default(0)
  following_count    Int       @default(0)
  tweet_count        Int       @default(0)
  email_verified     DateTime?
  role               Role?     @default(USER)
  accounts           Account[]
  sessions           Session[]
  created_at         DateTime  @default(now())
  updated_at         DateTime  @updatedAt

  @@map("users")
}

model Tweet {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  text            String
  user_id         String   @db.ObjectId
  image_urls      String[]
  hashtags        String[]
  favourite       String[]
  favourite_count Int      @default(0)
  reply_count     Int      @default(0)
  retweet_count   Int      @default(0)
  padding_bottom  Int      @default(0)
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  @@map("tweets")
}
